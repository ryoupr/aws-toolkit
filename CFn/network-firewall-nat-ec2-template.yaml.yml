AWSTemplateFormatVersion: '2010-09-09'
Description: 'Network Firewall, NAT Gateway, and EC2 instance architecture.'

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: 'NFW-VPC'


# Subnet settings
  NfwSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: 'Public-Subnet'

  ProtectedSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: 'Protected-Subnet'

  NgwSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.3.0/24'
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
        - Key: Name
          Value: 'Ngw-Subnet'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: 'NFW-InternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref NgwSubnet
      AllocationId: !GetAtt ElasticIP.AllocationId
      Tags:
        - Key: Name
          Value: 'NFW-NATGateway'

  ElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: 'vpc'

################
# Route tables #
################

  NfwRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'Nfw-RouteTable'

  NgwRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'Ngw-RouteTable'

  ProtectedRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'Protected-RouteTable'

##############
# Add routes #
##############

  NfwSubnetDefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref NfwRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref NatGateway

  NgwSubnetDefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref NgwRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref NatGateway

  ProtectedSubnetDefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref ProtectedRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      VpcEndpointId:  !Select [ 1 , !Split  [ ":" , !Select [ 0 , !GetAtt  NetworkFirewall.EndpointIds]]]

###########################
# Route table association #
###########################

  NgwSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref NgwSubnet
      RouteTableId: !Ref NgwRouteTable
  NfwSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref NfwSubnet
      RouteTableId: !Ref NfwRouteTable
  ProtectedSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ProtectedSubnet
      RouteTableId: !Ref ProtectedRouteTable

####################
# Network firewall #
####################

  NetworkFirewall:
    Type: 'AWS::NetworkFirewall::Firewall'
    Properties:
      FirewallName: 'NFW-Firewall'
      FirewallPolicyArn: !Ref FirewallPolicy
      VpcId: !Ref VPC
      SubnetMappings:
        - SubnetId: !Ref NfwSubnet
      Tags:
        - Key: Name
          Value: 'NFW-Firewall'

  FirewallPolicy:
    Type: 'AWS::NetworkFirewall::FirewallPolicy'
    Properties:
      FirewallPolicyName: 'NFW-Firewall-Policy'
      FirewallPolicy:
        StatelessDefaultActions:
          - aws:forward_to_sfe
        StatelessFragmentDefaultActions:
          - aws:forward_to_sfe
        StatelessRuleGroupReferences: []
        StatefulRuleGroupReferences: []
      Tags:
        - Key: Name
          Value: 'NFW-Firewall-Policy'

  EC2KeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties:
      KeyName: 'auto-generated-key'
      Tags:
        - Key: Name
          Value: 'NFW-EC2-KeyPair'

  SSMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'SSM-EC2-Role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Tags:
        - Key: Name
          Value: 'SSM-EC2-Role'

  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: 'SSM-EC2-InstanceProfile'
      Roles:
        - !Ref SSMRole

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't3.micro'
      SubnetId: !Ref ProtectedSubnet
      ImageId: 'ami-023ff3d4ab11b2525'  # Amazon Linux 2023
      KeyName: !Ref EC2KeyPair
      IamInstanceProfile: !Ref InstanceProfile
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: 'NFW-EC2-Instance'

  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Enable SSH access'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: 'NFW-Instance-SG'







